version: '3.8'

services:
  db:
    image: postgres:16
    container_name: postgres-quotation
    restart: always
    environment:
      POSTGRES_DB: quotationdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  app:
    build: .
    container_name: quotation-api
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/quotationdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml


  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3005:3000"
    volumes:
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/provisioning/dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

  front:
    container_name: quotation-front
    build:
      context: ./front
      args:
        NEXT_PUBLIC_BASE_URL: "http://localhost:8080"
    ports:
      - "3000:3000"
    depends_on:
      - app

  k6:
    build:
      context: .
      dockerfile: Dockerfile.k6  # ou Dockerfile si tu l'appelles comme Ã§a
    container_name: k6-load-test
    depends_on:
      - app


networks:
  default:

volumes:
  pgdata:
  grafana-data:
